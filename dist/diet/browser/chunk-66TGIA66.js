import{a as g}from"./chunk-OQA24X2C.js";var x=class{};var d=function(p){return p[p.PLAIN_TO_CLASS=0]="PLAIN_TO_CLASS",p[p.CLASS_TO_PLAIN=1]="CLASS_TO_PLAIN",p[p.CLASS_TO_CLASS=2]="CLASS_TO_CLASS",p}(d||{});var _=class{constructor(){this._typeMetadatas=new Map,this._transformMetadatas=new Map,this._exposeMetadatas=new Map,this._excludeMetadatas=new Map,this._ancestorsMap=new Map}addTypeMetadata(t){this._typeMetadatas.has(t.target)||this._typeMetadatas.set(t.target,new Map),this._typeMetadatas.get(t.target).set(t.propertyName,t)}addTransformMetadata(t){this._transformMetadatas.has(t.target)||this._transformMetadatas.set(t.target,new Map),this._transformMetadatas.get(t.target).has(t.propertyName)||this._transformMetadatas.get(t.target).set(t.propertyName,[]),this._transformMetadatas.get(t.target).get(t.propertyName).push(t)}addExposeMetadata(t){this._exposeMetadatas.has(t.target)||this._exposeMetadatas.set(t.target,new Map),this._exposeMetadatas.get(t.target).set(t.propertyName,t)}addExcludeMetadata(t){this._excludeMetadatas.has(t.target)||this._excludeMetadatas.set(t.target,new Map),this._excludeMetadatas.get(t.target).set(t.propertyName,t)}findTransformMetadatas(t,o,i){return this.findMetadatas(this._transformMetadatas,t,o).filter(s=>!s.options||s.options.toClassOnly===!0&&s.options.toPlainOnly===!0?!0:s.options.toClassOnly===!0?i===d.CLASS_TO_CLASS||i===d.PLAIN_TO_CLASS:s.options.toPlainOnly===!0?i===d.CLASS_TO_PLAIN:!0)}findExcludeMetadata(t,o){return this.findMetadata(this._excludeMetadatas,t,o)}findExposeMetadata(t,o){return this.findMetadata(this._exposeMetadatas,t,o)}findExposeMetadataByCustomName(t,o){return this.getExposedMetadatas(t).find(i=>i.options&&i.options.name===o)}findTypeMetadata(t,o){return this.findMetadata(this._typeMetadatas,t,o)}getStrategy(t){let o=this._excludeMetadatas.get(t),i=o&&o.get(void 0),s=this._exposeMetadatas.get(t),n=s&&s.get(void 0);return i&&n||!i&&!n?"none":i?"excludeAll":"exposeAll"}getExposedMetadatas(t){return this.getMetadata(this._exposeMetadatas,t)}getExcludedMetadatas(t){return this.getMetadata(this._excludeMetadatas,t)}getExposedProperties(t,o){return this.getExposedMetadatas(t).filter(i=>!i.options||i.options.toClassOnly===!0&&i.options.toPlainOnly===!0?!0:i.options.toClassOnly===!0?o===d.CLASS_TO_CLASS||o===d.PLAIN_TO_CLASS:i.options.toPlainOnly===!0?o===d.CLASS_TO_PLAIN:!0).map(i=>i.propertyName)}getExcludedProperties(t,o){return this.getExcludedMetadatas(t).filter(i=>!i.options||i.options.toClassOnly===!0&&i.options.toPlainOnly===!0?!0:i.options.toClassOnly===!0?o===d.CLASS_TO_CLASS||o===d.PLAIN_TO_CLASS:i.options.toPlainOnly===!0?o===d.CLASS_TO_PLAIN:!0).map(i=>i.propertyName)}clear(){this._typeMetadatas.clear(),this._exposeMetadatas.clear(),this._excludeMetadatas.clear(),this._ancestorsMap.clear()}getMetadata(t,o){let i=t.get(o),s;i&&(s=Array.from(i.values()).filter(u=>u.propertyName!==void 0));let n=[];for(let u of this.getAncestors(o)){let a=t.get(u);if(a){let e=Array.from(a.values()).filter(f=>f.propertyName!==void 0);n.push(...e)}}return n.concat(s||[])}findMetadata(t,o,i){let s=t.get(o);if(s){let n=s.get(i);if(n)return n}for(let n of this.getAncestors(o)){let u=t.get(n);if(u){let a=u.get(i);if(a)return a}}}findMetadatas(t,o,i){let s=t.get(o),n;s&&(n=s.get(i));let u=[];for(let a of this.getAncestors(o)){let e=t.get(a);e&&e.has(i)&&u.push(...e.get(i))}return u.slice().reverse().concat((n||[]).slice().reverse())}getAncestors(t){if(!t)return[];if(!this._ancestorsMap.has(t)){let o=[];for(let i=Object.getPrototypeOf(t.prototype.constructor);typeof i.prototype<"u";i=Object.getPrototypeOf(i.prototype.constructor))o.push(i);this._ancestorsMap.set(t,o)}return this._ancestorsMap.get(t)}};var q=new _;function O(){if(typeof globalThis<"u")return globalThis;if(typeof global<"u")return global;if(typeof window<"u")return window;if(typeof self<"u")return self}function b(p){return p!==null&&typeof p=="object"&&typeof p.then=="function"}function B(p){let t=new p;return!(t instanceof Set)&&!("push"in t)?[]:t}var S=class{constructor(t,o){this.transformationType=t,this.options=o,this.recursionStack=new Set}transform(t,o,i,s,n,u=0){if(Array.isArray(o)||o instanceof Set){let a=s&&this.transformationType===d.PLAIN_TO_CLASS?B(s):[];return o.forEach((e,f)=>{let m=t?t[f]:void 0;if(!this.options.enableCircularCheck||!this.isCircular(e)){let y;if(typeof i!="function"&&i&&i.options&&i.options.discriminator&&i.options.discriminator.property&&i.options.discriminator.subTypes){if(this.transformationType===d.PLAIN_TO_CLASS){y=i.options.discriminator.subTypes.find(A=>A.name===e[i.options.discriminator.property]);let c={newObject:a,object:e,property:void 0},h=i.typeFunction(c);y===void 0?y=h:y=y.value,i.options.keepDiscriminatorProperty||delete e[i.options.discriminator.property]}this.transformationType===d.CLASS_TO_CLASS&&(y=e.constructor),this.transformationType===d.CLASS_TO_PLAIN&&(e[i.options.discriminator.property]=i.options.discriminator.subTypes.find(c=>c.value===e.constructor).name)}else y=i;let P=this.transform(m,e,y,void 0,e instanceof Map,u+1);a instanceof Set?a.add(P):a.push(P)}else this.transformationType===d.CLASS_TO_CLASS&&(a instanceof Set?a.add(e):a.push(e))}),a}else{if(i===String&&!n)return o==null?o:String(o);if(i===Number&&!n)return o==null?o:Number(o);if(i===Boolean&&!n)return o==null?o:!!o;if((i===Date||o instanceof Date)&&!n)return o instanceof Date?new Date(o.valueOf()):o==null?o:new Date(o);if(O().Buffer&&(i===Buffer||o instanceof Buffer)&&!n)return o==null?o:Buffer.from(o);if(b(o)&&!n)return new Promise((a,e)=>{o.then(f=>a(this.transform(void 0,f,i,void 0,void 0,u+1)),e)});if(!n&&o!==null&&typeof o=="object"&&typeof o.then=="function")return o;if(typeof o=="object"&&o!==null){!i&&o.constructor!==Object&&(!Array.isArray(o)&&o.constructor===Array||(i=o.constructor)),!i&&t&&(i=t.constructor),this.options.enableCircularCheck&&this.recursionStack.add(o);let a=this.getKeys(i,o,n),e=t||{};!t&&(this.transformationType===d.PLAIN_TO_CLASS||this.transformationType===d.CLASS_TO_CLASS)&&(n?e=new Map:i?e=new i:e={});for(let f of a){if(f==="__proto__"||f==="constructor")continue;let m=f,y=f,P=f;if(!this.options.ignoreDecorators&&i){if(this.transformationType===d.PLAIN_TO_CLASS){let r=q.findExposeMetadataByCustomName(i,f);r&&(P=r.propertyName,y=r.propertyName)}else if(this.transformationType===d.CLASS_TO_PLAIN||this.transformationType===d.CLASS_TO_CLASS){let r=q.findExposeMetadata(i,f);r&&r.options&&r.options.name&&(y=r.options.name)}}let c;this.transformationType===d.PLAIN_TO_CLASS?c=o[m]:o instanceof Map?c=o.get(m):o[m]instanceof Function?c=o[m]():c=o[m];let h,A=c instanceof Map;if(i&&n)h=i;else if(i){let r=q.findTypeMetadata(i,P);if(r){let l={newObject:e,object:o,property:P},k=r.typeFunction?r.typeFunction(l):r.reflectedType;r.options&&r.options.discriminator&&r.options.discriminator.property&&r.options.discriminator.subTypes?o[m]instanceof Array?h=r:(this.transformationType===d.PLAIN_TO_CLASS&&(h=r.options.discriminator.subTypes.find(F=>{if(c&&c instanceof Object&&r.options.discriminator.property in c)return F.name===c[r.options.discriminator.property]}),h===void 0?h=k:h=h.value,r.options.keepDiscriminatorProperty||c&&c instanceof Object&&r.options.discriminator.property in c&&delete c[r.options.discriminator.property]),this.transformationType===d.CLASS_TO_CLASS&&(h=c.constructor),this.transformationType===d.CLASS_TO_PLAIN&&c&&(c[r.options.discriminator.property]=r.options.discriminator.subTypes.find(F=>F.value===c.constructor).name)):h=k,A=A||r.reflectedType===Map}else if(this.options.targetMaps)this.options.targetMaps.filter(l=>l.target===i&&!!l.properties[P]).forEach(l=>h=l.properties[P]);else if(this.options.enableImplicitConversion&&this.transformationType===d.PLAIN_TO_CLASS){let l=Reflect.getMetadata("design:type",i.prototype,P);l&&(h=l)}}let T=Array.isArray(o[m])?this.getReflectedType(i,P):void 0,L=t?t[m]:void 0;if(e.constructor.prototype){let r=Object.getOwnPropertyDescriptor(e.constructor.prototype,y);if((this.transformationType===d.PLAIN_TO_CLASS||this.transformationType===d.CLASS_TO_CLASS)&&(r&&!r.set||e[y]instanceof Function))continue}if(!this.options.enableCircularCheck||!this.isCircular(c)){let r=this.transformationType===d.PLAIN_TO_CLASS?y:f,l;this.transformationType===d.CLASS_TO_PLAIN?(l=o[r],l=this.applyCustomTransformations(l,i,r,o,this.transformationType),l=o[r]===l?c:l,l=this.transform(L,l,h,T,A,u+1)):c===void 0&&this.options.exposeDefaultValues?l=e[y]:(l=this.transform(L,c,h,T,A,u+1),l=this.applyCustomTransformations(l,i,r,o,this.transformationType)),(l!==void 0||this.options.exposeUnsetFields)&&(e instanceof Map?e.set(y,l):e[y]=l)}else if(this.transformationType===d.CLASS_TO_CLASS){let r=c;r=this.applyCustomTransformations(r,i,f,o,this.transformationType),(r!==void 0||this.options.exposeUnsetFields)&&(e instanceof Map?e.set(y,r):e[y]=r)}}return this.options.enableCircularCheck&&this.recursionStack.delete(o),e}else return o}}applyCustomTransformations(t,o,i,s,n){let u=q.findTransformMetadatas(o,i,this.transformationType);return this.options.version!==void 0&&(u=u.filter(a=>a.options?this.checkVersion(a.options.since,a.options.until):!0)),this.options.groups&&this.options.groups.length?u=u.filter(a=>a.options?this.checkGroups(a.options.groups):!0):u=u.filter(a=>!a.options||!a.options.groups||!a.options.groups.length),u.forEach(a=>{t=a.transformFn({value:t,key:i,obj:s,type:n,options:this.options})}),t}isCircular(t){return this.recursionStack.has(t)}getReflectedType(t,o){if(!t)return;let i=q.findTypeMetadata(t,o);return i?i.reflectedType:void 0}getKeys(t,o,i){let s=q.getStrategy(t);s==="none"&&(s=this.options.strategy||"exposeAll");let n=[];if((s==="exposeAll"||i)&&(o instanceof Map?n=Array.from(o.keys()):n=Object.keys(o)),i)return n;if(this.options.ignoreDecorators&&this.options.excludeExtraneousValues&&t){let u=q.getExposedProperties(t,this.transformationType),a=q.getExcludedProperties(t,this.transformationType);n=[...u,...a]}if(!this.options.ignoreDecorators&&t){let u=q.getExposedProperties(t,this.transformationType);this.transformationType===d.PLAIN_TO_CLASS&&(u=u.map(e=>{let f=q.findExposeMetadata(t,e);return f&&f.options&&f.options.name?f.options.name:e})),this.options.excludeExtraneousValues?n=u:n=n.concat(u);let a=q.getExcludedProperties(t,this.transformationType);a.length>0&&(n=n.filter(e=>!a.includes(e))),this.options.version!==void 0&&(n=n.filter(e=>{let f=q.findExposeMetadata(t,e);return!f||!f.options?!0:this.checkVersion(f.options.since,f.options.until)})),this.options.groups&&this.options.groups.length?n=n.filter(e=>{let f=q.findExposeMetadata(t,e);return!f||!f.options?!0:this.checkGroups(f.options.groups)}):n=n.filter(e=>{let f=q.findExposeMetadata(t,e);return!f||!f.options||!f.options.groups||!f.options.groups.length})}return this.options.excludePrefixes&&this.options.excludePrefixes.length&&(n=n.filter(u=>this.options.excludePrefixes.every(a=>u.substr(0,a.length)!==a))),n=n.filter((u,a,e)=>e.indexOf(u)===a),n}checkVersion(t,o){let i=!0;return i&&t&&(i=this.options.version>=t),i&&o&&(i=this.options.version<o),i}checkGroups(t){return t?this.options.groups.some(o=>t.includes(o)):!0}};var C={enableCircularCheck:!1,enableImplicitConversion:!1,excludeExtraneousValues:!1,excludePrefixes:void 0,exposeDefaultValues:!1,exposeUnsetFields:!0,groups:void 0,ignoreDecorators:!1,strategy:void 0,targetMaps:void 0,version:void 0};var M=class{instanceToPlain(t,o){return new S(d.CLASS_TO_PLAIN,g(g({},C),o)).transform(void 0,t,void 0,void 0,void 0,void 0)}classToPlainFromExist(t,o,i){return new S(d.CLASS_TO_PLAIN,g(g({},C),i)).transform(o,t,void 0,void 0,void 0,void 0)}plainToInstance(t,o,i){return new S(d.PLAIN_TO_CLASS,g(g({},C),i)).transform(void 0,o,t,void 0,void 0,void 0)}plainToClassFromExist(t,o,i){return new S(d.PLAIN_TO_CLASS,g(g({},C),i)).transform(t,o,void 0,void 0,void 0,void 0)}instanceToInstance(t,o){return new S(d.CLASS_TO_CLASS,g(g({},C),o)).transform(void 0,t,void 0,void 0,void 0,void 0)}classToClassFromExist(t,o,i){return new S(d.CLASS_TO_CLASS,g(g({},C),i)).transform(o,t,void 0,void 0,void 0,void 0)}serialize(t,o){return JSON.stringify(this.instanceToPlain(t,o))}deserialize(t,o,i){let s=JSON.parse(o);return this.plainToInstance(t,s,i)}deserializeArray(t,o,i){let s=JSON.parse(o);return this.plainToInstance(t,s,i)}};var W=new M;function w(p,t,o){return W.plainToInstance(p,t,o)}var rt={firstDishes:[{idFood:0,food:"Pasta o riso asciutti",rawWeight:80,cookedWeight:160},{idFood:1,food:"Pasta o riso in brodo",rawWeight:40,cookedWeight:300},{idFood:2,food:"Farro o orzo",rawWeight:40,cookedWeight:300},{idFood:3,food:"Tortellini asciutti",rawWeight:100,cookedWeight:180},{idFood:4,food:"Tortellini in brodo",rawWeight:50,cookedWeight:200},{idFood:5,food:"Gnocchi di patate",rawWeight:200,cookedWeight:300},{idFood:6,food:"Lasagne",rawWeight:50,cookedWeight:300}],secondDishes:[{idFood:7,food:"Pollo, coniglio",rawWeight:230,cookedWeight:180},{idFood:8,food:"Tacchino, faraona",rawWeight:130,cookedWeight:100},{idFood:9,food:"Agnello, maiale",rawWeight:130,cookedWeight:100},{idFood:10,food:"Trippa",rawWeight:200,cookedWeight:100},{idFood:11,food:"Acciughe, anguilla, cefalo, cernia, dentice, nasello, palombo, rombo, sarda, sgombro, sogliola, spigola, triglia, polpo, vongola",rawWeight:150,cookedWeight:120},{idFood:12,food:"Mitili, seppia, razza",rawWeight:180,cookedWeight:150},{idFood:13,food:"Calamaro, trota",rawWeight:140,cookedWeight:120},{idFood:14,food:"Baccal\xE0, stoccafis",rawWeight:180,cookedWeight:150},{idFood:15,food:"Wurstel",rawWeight:120,cookedWeight:100}],sideDishes:[{idFood:16,food:"Patate",rawWeight:200,cookedWeight:150},{idFood:17,food:"Fagioli",rawWeight:50,cookedWeight:100},{idFood:18,food:"Piselli, fagiolini",rawWeight:130,cookedWeight:120},{idFood:19,food:"Carote",rawWeight:130,cookedWeight:120},{idFood:20,food:"Carciofi",rawWeight:150,cookedWeight:120},{idFood:21,food:"Ceci",rawWeight:40,cookedWeight:100},{idFood:22,food:"Cavolfiore",rawWeight:170,cookedWeight:120},{idFood:23,food:"Zucchine",rawWeight:180,cookedWeight:120},{idFood:23,food:"Pur\xE8",rawWeight:130,cookedWeight:120},{idFood:24,food:"Finocchi",rawWeight:150,cookedWeight:120},{idFood:25,food:"Verdura di stagione",rawWeight:200,cookedWeight:120}]},dt={seasons:[{id:0,name:"Inverno"},{id:1,name:"Estate"}]},st=w(x,[{id:1,season:1,diets:[{dayId:1,day:"Luned\xEC",diet:[{id:0,breakfast:[{id:0,food:"Caff\xE8 o Th\xE8",quantity:"Q.B."},{id:1,food:"Fette biscottate",quantity:30,alternatives:[{id:0,food:"4-5 biscotti secchi",quantity:30},{id:1,food:"Pane comune",quantity:60},{id:2,food:"Pane integrale",quantity:80},{id:3,food:"Pane tostato",quantity:40}]},{id:2,food:"Marmellata",quantity:25,alternatives:[{id:0,food:"Frutta secca",quantity:25}]}],midMorningSnack:[{id:0,food:"Frutta",quantity:1,alternatives:[{id:0,food:"Pavesini",quantity:"1 pacchetto"},{id:1,food:"Biscotti secchi",quantity:30},{id:2,food:"Barretta ai cereali",quantity:1},{id:3,food:"Yogurt alla frutta",quantity:125}]}],lunch:[{id:0,food:"Pane",quantity:50,notes:"Se il pane non \xE8 di gradimento, aumentare di 30g pasta o riso",alternatives:[{id:1,food:"Pane integrale",quantity:70},{id:2,food:"Cracker, grissini, crostini, pane tostato",quantity:25},{id:3,food:"Patate cotte",quantity:150},{id:4,food:"Polenta cotta",quantity:150}]},{id:1,idFood:0,food:"Pasta al pomodoro",quantity:100,notes:"30g pomodoro, 10g grana se possibile pesarlo."},{id:2,food:"Verdura",quantity:"Q.B."},{id:3,food:"Frutta",quantity:1}],midAfternoonSnack:[{id:0,food:"Cracker integrali",quantity:"1 pacchetto (30g)",alternatives:[{id:0,food:"Pavesini",quantity:"1 pacchetto"},{id:1,food:"Biscotti secchi",quantity:30},{id:2,food:"Barretta ai cereali",quantity:1},{id:3,food:"Frutta",quantity:1}]}],dinner:[{id:0,food:"Pane",quantity:100,alternatives:[{id:0,food:"Pane integrale",quantity:120},{id:1,food:"Cracker, grissini, crostini, pane tostato o gallette",quantity:50},{id:2,food:"Patate cotte",quantity:300},{id:3,food:"Polenta cotta",quantity:300}]},{id:1,food:"Bresaola",quantity:100,alternatives:[{id:0,food:"Vitello carne magra",quantity:150}]},{id:2,food:"Verdura",quantity:"Q.B."},{id:3,food:"Frutta",quantity:1}]}]},{dayId:2,day:"Marted\xEC",diet:[{id:0,breakfast:[{id:0,food:"Caff\xE8 o Th\xE8",quantity:"Q.B."},{id:1,food:"Fette biscottate",quantity:30,alternatives:[{id:0,food:"4-5 biscotti secchi",quantity:30},{id:1,food:"Pane comune",quantity:60},{id:2,food:"Pane integrale",quantity:80},{id:3,food:"Pane tostato",quantity:40}]},{id:2,food:"Marmellata",quantity:25,alternatives:[{id:0,food:"Frutta secca",quantity:25}]}],midMorningSnack:[{id:0,food:"Frutta",quantity:1,alternatives:[{id:0,food:"Pavesini",quantity:"1 pacchetto"},{id:1,food:"Biscotti secchi",quantity:30},{id:2,food:"Barretta ai cereali",quantity:1},{id:3,food:"Yogurt alla frutta",quantity:125}]}],lunch:[{id:0,food:"Pane",quantity:50,notes:"Se il pane non \xE8 di gradimento, aumentare di 30g pasta o riso",alternatives:[{id:1,food:"Pane integrale",quantity:70},{id:2,food:"Cracker, grissini, crostini, pane tostato",quantity:25},{id:3,food:"Patate cotte",quantity:150},{id:4,food:"Polenta cotta",quantity:150}]},{id:1,idFood:0,food:"Pasta al pesto",quantity:100,notes:"30g pomodoro, 10g grana se possibile pesarlo.",alternatives:[{id:0,food:"Condimento: tonno",quantity:50},{id:0,food:"Condimento: piselli",quantity:100}]},{id:2,food:"Verdura",quantity:"Q.B."},{id:3,food:"Frutta",quantity:1}],midAfternoonSnack:[{id:0,food:"Yogurt di frutta",quantity:125,alternatives:[{id:0,food:"Latte",quantity:200},{id:1,food:"Frutta",quantity:1}]},{id:1,food:"Cornflackes",quantity:30,alternatives:[{id:0,food:"Pavesini",quantity:"1 pacchetto"},{id:1,food:"Biscotti secchi",quantity:30},{id:2,food:"Barretta ai cereali",quantity:1},{id:3,food:"Frutta",quantity:1}]}],dinner:[{id:0,food:"Pane",quantity:100,alternatives:[{id:0,food:"Pane integrale",quantity:120},{id:1,food:"Cracker, grissini, crostini, pane tostato o gallette",quantity:50},{id:2,food:"Patate cotte",quantity:300},{id:3,food:"Polenta cotta",quantity:300}]},{id:1,food:"Mozzarella",quantity:100,alternatives:[{id:0,food:"Crescenza",quantity:100},{id:1,food:"Robiola",quantity:100},{id:2,food:"Primo sale",quantity:100},{id:3,food:"Primo sale",quantity:100},{id:4,food:"Fiocchi di latte",quantity:150}]},{id:1,food:"Crudo",quantity:50,alternatives:[{id:0,food:"Cotto",quantity:50},{id:1,food:"Bresaola",quantity:50},{id:2,food:"Affettato di pollo",quantity:50},{id:3,food:"Affettato di tacchino",quantity:50},{id:4,food:"Speck",quantity:50}]},{id:3,food:"Verdura",quantity:"Q.B."},{id:4,food:"Frutta",quantity:1}]}]},{dayId:3,day:"Mercoled\xEC",diet:[{id:0,breakfast:[{id:0,food:"Caff\xE8 o Th\xE8",quantity:"Q.B."},{id:1,food:"Fette biscottate",quantity:30,alternatives:[{id:0,food:"4-5 biscotti secchi",quantity:30},{id:1,food:"Pane comune",quantity:60},{id:2,food:"Pane integrale",quantity:80},{id:3,food:"Pane tostato",quantity:40}]},{id:2,food:"Marmellata",quantity:25,alternatives:[{id:0,food:"Frutta secca",quantity:25}]}],midMorningSnack:[{id:0,food:"Frutta",quantity:1,alternatives:[{id:0,food:"Pavesini",quantity:"1 pacchetto"},{id:1,food:"Biscotti secchi",quantity:30},{id:2,food:"Barretta ai cereali",quantity:1},{id:3,food:"Yogurt alla frutta",quantity:125}]}],lunch:[{id:0,food:"Pane",quantity:50,notes:"Se il pane non \xE8 di gradimento, aumentare di 30g pasta o riso",alternatives:[{id:1,food:"Pane integrale",quantity:70},{id:2,food:"Cracker, grissini, crostini, pane tostato",quantity:25},{id:3,food:"Patate cotte",quantity:150},{id:4,food:"Polenta cotta",quantity:150}]},{id:1,idFood:0,food:"Pasta o riso alle verdure",quantity:100,notes:"30g pomodoro, 10g grana se possibile pesarlo.",alternatives:[{id:0,food:"Condimento: zafferano",quantity:"Q.B."},{id:0,food:"Condimento: pomodoro",quantity:"Q.B."}]},{id:2,food:"Verdura",quantity:"Q.B."},{id:3,food:"Frutta",quantity:1}],midAfternoonSnack:[{id:0,food:"Cracker integrali",quantity:"1 pacchetto (30g)",alternatives:[{id:0,food:"Pavesini",quantity:"1 pacchetto"},{id:1,food:"Biscotti secchi",quantity:30},{id:2,food:"Barretta ai cereali",quantity:1},{id:3,food:"Frutta",quantity:1}]}],dinner:[{id:0,food:"Pane",quantity:100,alternatives:[{id:0,food:"Pane integrale",quantity:120},{id:1,food:"Cracker, grissini, crostini, pane tostato o gallette",quantity:50},{id:2,food:"Patate cotte",quantity:300},{id:3,food:"Polenta cotta",quantity:300}]},{id:1,food:"Uova",quantity:2,notes:"Possibile frittata con verdura",alternatives:[{id:0,food:"Roastbeef",quantity:100}]},{id:3,food:"Verdura",quantity:"Q.B."},{id:4,food:"Frutta",quantity:1}]}]},{dayId:4,day:"Gioved\xEC",diet:[{id:0,breakfast:[{id:0,food:"Caff\xE8 o Th\xE8",quantity:"Q.B."},{id:1,food:"Fette biscottate",quantity:30,alternatives:[{id:0,food:"4-5 biscotti secchi",quantity:30},{id:1,food:"Pane comune",quantity:60},{id:2,food:"Pane integrale",quantity:80},{id:3,food:"Pane tostato",quantity:40}]},{id:2,food:"Marmellata",quantity:25,alternatives:[{id:0,food:"Frutta secca",quantity:25}]}],midMorningSnack:[{id:0,food:"Frutta",quantity:1,alternatives:[{id:0,food:"Pavesini",quantity:"1 pacchetto"},{id:1,food:"Biscotti secchi",quantity:30},{id:2,food:"Barretta ai cereali",quantity:1},{id:3,food:"Yogurt alla frutta",quantity:125}]}],lunch:[{id:0,food:"Pane",quantity:100,alternatives:[{id:1,food:"Pane integrale",quantity:120},{id:2,food:"Cracker, grissini, crostini, pane tostato",quantity:50},{id:3,food:"Patate cotte",quantity:300},{id:4,food:"Polenta cotta",quantity:300}]},{id:1,idFood:7,food:"Carne di pollo",quantity:150,notes:"Possibile aggiunta di sughi",alternatives:[{id:0,idFood:7,food:"Altro tipo di carne bianca",quantity:150}]},{id:2,food:"Verdura",quantity:"Q.B."},{id:3,food:"Frutta",quantity:1}],midAfternoonSnack:[{id:0,food:"Yogurt di frutta",quantity:125,alternatives:[{id:0,food:"Latte",quantity:200},{id:1,food:"Frutta",quantity:1}]},{id:1,food:"Cornflackes",quantity:30,alternatives:[{id:0,food:"Pavesini",quantity:"1 pacchetto"},{id:1,food:"Biscotti secchi",quantity:30},{id:2,food:"Barretta ai cereali",quantity:1},{id:3,food:"Frutta",quantity:1}]}],dinner:[{id:0,food:"Pane",quantity:100,alternatives:[{id:0,food:"Pane integrale",quantity:120},{id:1,food:"Cracker, grissini, crostini, pane tostato o gallette",quantity:50},{id:2,food:"Patate cotte",quantity:300},{id:3,food:"Polenta cotta",quantity:300}]},{id:1,food:"Tonno e piselli",quantity:200,notes:"Tonno 50g o Tonno al naturale 100g. Piselli o altri legumi 150g"},{id:3,food:"Verdura",quantity:"Q.B."},{id:4,food:"Frutta",quantity:1}]}]},{dayId:5,day:"Vened\xEC",diet:[{id:0,breakfast:[{id:0,food:"Caff\xE8 o Th\xE8",quantity:"Q.B."},{id:1,food:"Fette biscottate",quantity:30,alternatives:[{id:0,food:"4-5 biscotti secchi",quantity:30},{id:1,food:"Pane comune",quantity:60},{id:2,food:"Pane integrale",quantity:80},{id:3,food:"Pane tostato",quantity:40}]},{id:2,food:"Marmellata",quantity:25,alternatives:[{id:0,food:"Frutta secca",quantity:25}]}],midMorningSnack:[{id:0,food:"Frutta",quantity:1,alternatives:[{id:0,food:"Pavesini",quantity:"1 pacchetto"},{id:1,food:"Biscotti secchi",quantity:30},{id:2,food:"Barretta ai cereali",quantity:1},{id:3,food:"Yogurt alla frutta",quantity:125}]}],lunch:[{id:0,food:"Pane",quantity:100,alternatives:[{id:1,food:"Pane integrale",quantity:120},{id:2,food:"Cracker, grissini, crostini, pane tostato",quantity:50},{id:3,food:"Patate cotte",quantity:300},{id:4,food:"Polenta cotta",quantity:300}]},{id:1,food:"Sogliola",quantity:180,alternatives:[{id:0,food:"Merluzzo",quantity:180},{id:1,food:"Trota",quantity:180},{id:2,food:"Pesce spada",quantity:150},{id:3,food:"Salmone",quantity:150},{id:4,food:"Tonno",quantity:150}]},{id:2,food:"Verdura",quantity:"Q.B."},{id:3,food:"Frutta",quantity:1}],midAfternoonSnack:[{id:0,food:"Yogurt di frutta",quantity:125,alternatives:[{id:0,food:"Latte",quantity:200},{id:1,food:"Frutta",quantity:1}]},{id:1,food:"Cornflackes",quantity:30,alternatives:[{id:0,food:"Pavesini",quantity:"1 pacchetto"},{id:1,food:"Biscotti secchi",quantity:30},{id:2,food:"Barretta ai cereali",quantity:1},{id:3,food:"Frutta",quantity:1}]}],dinner:[{id:1,food:"Pizza",quantity:1,notes:"Margherita, verdure, caprese"}]}]},{dayId:6,day:"Sabato",diet:[{id:0,breakfast:[{id:0,food:"Caff\xE8 o Th\xE8",quantity:"Q.B."},{id:1,food:"Fette biscottate",quantity:30,alternatives:[{id:0,food:"4-5 biscotti secchi",quantity:30},{id:1,food:"Pane comune",quantity:60},{id:2,food:"Pane integrale",quantity:80},{id:3,food:"Pane tostato",quantity:40}]},{id:2,food:"Marmellata",quantity:25,alternatives:[{id:0,food:"Frutta secca",quantity:25}]}],midMorningSnack:[{id:0,food:"Frutta",quantity:1,alternatives:[{id:0,food:"Pavesini",quantity:"1 pacchetto"},{id:1,food:"Biscotti secchi",quantity:30},{id:2,food:"Barretta ai cereali",quantity:1},{id:3,food:"Yogurt alla frutta",quantity:125}]}],lunch:[{id:0,food:"Pane",notes:"Se il pane non \xE8 di gradimento, aumentare di 30g pasta o riso",quantity:50,alternatives:[{id:1,food:"Pane integrale",quantity:70},{id:2,food:"Cracker, grissini, crostini, pane tostato",quantity:25},{id:3,food:"Patate cotte",quantity:150},{id:4,food:"Polenta cotta",quantity:150}]},{id:1,idFood:0,food:"Pasta o riso al tonno",quantity:130,notes:"Rag\xF9 di carne"},{id:2,food:"Verdura",quantity:"Q.B."},{id:3,food:"Frutta",quantity:1}],midAfternoonSnack:[{id:0,food:"Yogurt di frutta",quantity:125,alternatives:[{id:0,food:"Latte",quantity:200},{id:1,food:"Frutta",quantity:1}]},{id:1,food:"Cornflackes",quantity:30,alternatives:[{id:0,food:"Pavesini",quantity:"1 pacchetto"},{id:1,food:"Biscotti secchi",quantity:30},{id:2,food:"Barretta ai cereali",quantity:1},{id:3,food:"Frutta",quantity:1}]}],dinner:[{id:0,food:"Pane",quantity:100,alternatives:[{id:0,food:"Pane integrale",quantity:120},{id:1,food:"Cracker, grissini, crostini, pane tostato o gallette",quantity:50},{id:2,food:"Patate cotte",quantity:300},{id:3,food:"Polenta cotta",quantity:300}]},{id:1,food:"Tagliata di manzo",quantity:150,alternatives:[{food:"Grigliata di carne o pesce",quantity:150}]},{id:3,food:"Verdura",quantity:"Q.B."},{id:4,food:"Frutta",quantity:1}]}]},{dayId:7,day:"Domenica",diet:[{id:0,breakfast:[{id:0,food:"Caff\xE8 o Th\xE8",quantity:"Q.B."},{id:1,food:"Fette biscottate",quantity:30,alternatives:[{id:0,food:"4-5 biscotti secchi",quantity:30},{id:1,food:"Pane comune",quantity:60},{id:2,food:"Pane integrale",quantity:80},{id:3,food:"Pane tostato",quantity:40}]},{id:2,food:"Marmellata",quantity:25,alternatives:[{id:0,food:"Frutta secca",quantity:25}]}],midMorningSnack:[{id:0,food:"Frutta",quantity:1,alternatives:[{id:0,food:"Pavesini",quantity:"1 pacchetto"},{id:1,food:"Biscotti secchi",quantity:30},{id:2,food:"Barretta ai cereali",quantity:1},{id:3,food:"Yogurt alla frutta",quantity:125}]}],lunch:[{id:0,food:"Pane",quantity:100,alternatives:[{id:1,food:"Pane integrale",quantity:120},{id:2,food:"Cracker, grissini, crostini, pane tostato",quantity:50},{id:3,food:"Patate cotte",quantity:300},{id:4,food:"Polenta cotta",quantity:300}]},{id:1,idFood:7,food:"Carne di pollo",quantity:150,notes:"Possibile aggiunta di sughi",alternatives:[{id:0,idFood:7,food:"Altro tipo di carne bianca",quantity:150}]},{id:2,food:"Verdura",quantity:"Q.B."},{id:3,food:"Frutta",quantity:1}],midAfternoonSnack:[{id:0,food:"Yogurt di frutta",quantity:125,alternatives:[{id:0,food:"Latte",quantity:200},{id:1,food:"Frutta",quantity:1}]},{id:1,food:"Cornflackes",quantity:30,alternatives:[{id:0,food:"Pavesini",quantity:"1 pacchetto"},{id:1,food:"Biscotti secchi",quantity:30},{id:2,food:"Barretta ai cereali",quantity:1},{id:3,food:"Frutta",quantity:1}]}],dinner:[{id:0,food:"Pane",quantity:50,alternatives:[{id:0,food:"Pane integrale",quantity:120},{id:1,food:"Cracker, grissini, crostini, pane tostato o gallette",quantity:25},{id:2,food:"Patate cotte",quantity:150},{id:3,food:"Polenta cotta",quantity:150}]},{id:1,food:"Pasta e piselli",quantity:100,notes:"Altro sugo \xE8 ok"},{id:3,food:"Verdura",quantity:"Q.B."},{id:4,food:"Frutta",quantity:1}]}]}]}]);export{rt as a,dt as b,st as c};
